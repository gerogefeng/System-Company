CREATE EXTENSION IF NOT EXISTS pgcrypto; --connect to library with functions

DROP TABLE IF EXISTS employees CASCADE;
DROP TABLE IF EXISTS roles CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS passports CASCADE;
DROP TABLE IF EXISTS driver_licences CASCADE;
DROP TABLE IF EXISTS category CASCADE;
DROP TABLE IF EXISTS driver_licences_category CASCADE;
DROP TABLE IF EXISTS private_cards CASCADE;
DROP TABLE IF EXISTS log_employee CASCADE;
DROP TABLE IF EXISTS orders CASCADE;
DROP TABLE IF EXISTS reports CASCADE;
DROP TABLE IF EXISTS organizations CASCADE;
DROP TABLE IF EXISTS places CASCADE;
DROP TABLE IF EXISTS posts CASCADE;
DROP TABLE IF EXISTS employee_post CASCADE;
DROP TABLE IF EXISTS departure CASCADE;
DROP TABLE IF EXISTS equipment CASCADE;
DROP TABLE IF EXISTS equipment_departure CASCADE;
DROP TABLE IF EXISTS mark CASCADE;
DROP TABLE IF EXISTS model CASCADE;
DROP TABLE IF EXISTS transports CASCADE;
DROP TABLE IF EXISTS car_rental CASCADE;

-------------EMPLOYEE----------------

CREATE TABLE IF NOT EXISTS employees (
  id         SERIAL NOT NULL PRIMARY KEY,
  name       TEXT   NOT NULL,
  last_name  TEXT   NOT NULL,
  patronymic TEXT   NOT NULL,
  url_photo  TEXT   NULL
);

CREATE TABLE IF NOT EXISTS roles (
  id    SERIAL NOT NULL PRIMARY KEY,
  title TEXT   NOT NULL
);

CREATE TABLE IF NOT EXISTS users (
  id          INTEGER NOT NULL PRIMARY KEY,
  login       TEXT    NOT NULL,
  pass        TEXT    NOT NULL,
  id_role     INTEGER REFERENCES roles (id),
  id_employee INTEGER NULL UNIQUE REFERENCES employees (id)
);

CREATE TABLE IF NOT EXISTS passports (
  id              SERIAL            NOT NULL PRIMARY KEY,
  nationality     TEXT              NOT NULL,
  department      TEXT              NOT NULL,
  serial_passport TEXT DEFAULT 'ля' NULL,
  number_passport TEXT,
  date_out        DATE              NOT NULL,
  date_in         DATE              NOT NULL,
  id_employee     INTEGER REFERENCES employees (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS driver_licences (
  id          SERIAL NOT NULL PRIMARY KEY,
  department  TEXT   NOT NULL,
  number      TEXT   NULL,
  date_out    DATE,
  date_in     DATE,
  id_employee INTEGER REFERENCES employees (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS category (
  id    SERIAL NOT NULL PRIMARY KEY,
  title TEXT   NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS driver_licences_category (
  id               SERIAL NOT NULL PRIMARY KEY,
  fk_category      INTEGER REFERENCES category (id),
  fk_driverlicence INTEGER REFERENCES driver_licences (id),
  UNIQUE (fk_category, fk_driverlicence)
);

CREATE TABLE IF NOT EXISTS private_cards (
  id                   SERIAL NOT NULL PRIMARY KEY REFERENCES employees (id) ON DELETE CASCADE,
  data_birth           DATE   NOT NULL,
  private_number_phone TEXT   NULL,
  email                TEXT   NULL
);

CREATE TABLE IF NOT EXISTS log_employee (
  id        SERIAL NOT NULL PRIMARY KEY,
  operation TEXT   NOT NULL,
  datetime  DATE   NOT NULL
);

CREATE TABLE IF NOT EXISTS posts (
  id    SERIAL       NOT NULL PRIMARY KEY,
  title VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS employee_post (
  id          SERIAL  NOT NULL PRIMARY KEY,
  id_employee INTEGER NOT NULL REFERENCES employees (id),
  id_post     INTEGER NOT NULL REFERENCES posts (id),
  date_start  DATE    NOT NULL,
  date_end    DATE    NOT NULL
);

-------------TRANSPORT----------------

CREATE TABLE IF NOT EXISTS mark (
  id   SERIAL       NOT NULL PRIMARY KEY,
  name VARCHAR(255) NOT NULL
);


CREATE TABLE IF NOT EXISTS model (
  id      SERIAL       NOT NULL PRIMARY KEY,
  id_mark INTEGER      NOT NULL REFERENCES mark (id),
  name    VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS transports (
  id          SERIAL      NOT NULL PRIMARY KEY,
  id_mark     INTEGER     NOT NULL REFERENCES mark (id),
  id_model    INTEGER     NOT NULL REFERENCES model (id),
  engine      VARCHAR(40) NOT NULL,
  capacity_kg INTEGER     NOT NULL CHECK (capacity_kg > 0),
  status      INTEGER     NOT NULL,
  seats       INTEGER     NOT NULL CHECK (seats > 0),
  photo_url   VARCHAR(40) NULL
);

------------ORGANIZATION-----------------
CREATE TABLE IF NOT EXISTS organizations (
  id    SERIAL       NOT NULL PRIMARY KEY,
  title VARCHAR(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS reports (
  id                SERIAL NOT NULL PRIMARY KEY,
  resource_document TEXT   NULL
);

CREATE TABLE IF NOT EXISTS places (
  id         SERIAL       NOT NULL PRIMARY KEY,
  title      VARCHAR(255) NOT NULL,
  date_begin DATE,
  data_end   DATE
);

CREATE TABLE IF NOT EXISTS orders (
  id              SERIAL                                NOT NULL PRIMARY KEY,
  id_place        INTEGER REFERENCES places (id)        NOT NULL,
  id_organization INTEGER REFERENCES organizations (id) NULL NULL,
  id_report       INTEGER REFERENCES reports (id)       NULL,
  deletestatus    BOOLEAN DEFAULT FALSE
);

-------------------ACTION-------------------------

CREATE TABLE IF NOT EXISTS departure (
  id               SERIAL  NOT NULL PRIMARY KEY,
  id_order         INTEGER NOT NULL REFERENCES orders (id),
  id_employee_post INTEGER NOT NULL REFERENCES employee_post (id)
);


CREATE TABLE IF NOT EXISTS car_rental (
  id           SERIAL  NOT NULL PRIMARY KEY,
  id_departure INTEGER NOT NULL REFERENCES departure (id),
  id_transport INTEGER NOT NULL REFERENCES transports (id)
);
-------------------INSTRUMENTS---------------------

CREATE TABLE IF NOT EXISTS equipment (
  id       SERIAL       NOT NULL PRIMARY KEY,
  title    VARCHAR(255) NOT NULL,
  weight   INTEGER      NOT NULL,
  date_buy DATE         NOT NULL,
  date_end DATE         NOT NULL
);

CREATE TABLE IF NOT EXISTS equipment_departure (
  id           SERIAL  NOT NULL PRIMARY KEY,
  id_departure INTEGER NOT NULL REFERENCES departure (id),
  id_equipment INTEGER NOT NULL REFERENCES equipment (id),
  date_start   DATE    NOT NULL,
  date_end     DATE    NULL
);
-------------------------------------------------